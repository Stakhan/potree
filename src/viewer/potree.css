
/* CSS - Cascading Style Sheet */
/* Palette color codes */
/* Palette URL: http://paletton.com/#uid=13p0u0kex8W2uqu8af7lEqaulDE */

/* Feel free to copy&paste color codes to your application */

/* As hex codes */
.color-primary-0 { color: #19282C }	/* Main Primary color */
.color-primary-1 { color: #7A8184 }
.color-primary-2 { color: #39474B }
.color-primary-3 { color: #2D6D82 }
.color-primary-4 { color: #108FB9 }

/* As RGBa codes */
.rgba-primary-0 { color: rgba( 25, 40, 44,1) }	/* Main Primary color */
.rgba-primary-1 { color: rgba(122,129,132,1) }
.rgba-primary-2 { color: rgba( 57, 71, 75,1) }
.rgba-primary-3 { color: rgba( 45,109,130,1) }
.rgba-primary-4 { color: rgba( 16,143,185,1) }

/* Generated by Paletton.com Â© 2002-2014 */
/* http://paletton.com */




:root{
	
	--color-0: 			rgba( 25, 40, 44, 1);
	--color-1: 			rgba(122,129,132, 1);
	--color-2: 			rgba( 57, 71, 75, 1);
	--color-3: 			rgba( 45,109,130, 1);
	--color-4: 			rgba( 16,143,185, 1);
	
	--bg-color:			var(--color-0);
	--bg-color-2:		rgb(60, 80, 85);
	--bg-light-color:	rgba( 48, 61, 65, 1);
	--bg-dark-color:	rgba( 24, 31, 33, 1);
	--bg-hover-color:	var(--color-2);
	
	--font-color:		#9AA1A4;
	--font-color-2:		#ddd;
	--font-color:		#cccccc;
	--border-color:		black;
	
	--measurement-detail-node-bg-light:		var(--color-1);
	--measurement-detail-node-bg-dark:		var(--color-2);
	--measurement-detail-area-bg-color:		#eee;

	
}


#sidebar_root{
	color:				var(--font-color);
	background-color:	var(--bg-color);
	font-family:		Arial,Helvetica,sans-serif;
	font-size:			1em;
}

.potree_failpage{
	width: 100%;
	height: 100%;
	background-color: white;
	position: absolute;
	margin: 15px;
}

.potree_failpage a{
	color: initial !important;
	text-decoration: underline !important;
}

.potree_info_text{
	color:		white;
	font-weight: bold;
	text-shadow:  1px  1px 1px black,
				  1px -1px 1px black,
				 -1px  1px 1px black,
				 -1px -1px 1px black;
}

.potree_message{
	width: 300px;
	background-color: var(--bg-color);
	padding: 5px;
	margin: 5px;
	border-radius: 4px;
	color: var(--font-color);
	font-family: Arial;
	opacity: 0.8;
	border: 1px solid black;
	display: flex;
}

#potree_description{
	position: absolute; 
	top: 10px; 
	left: 50%; 
	transform: translateX(-50%); 
	text-align: center;
	z-index:	1000;
}

#potree_sidebar_container{
	position:	absolute;
	z-index:	0;
	width:		350px;
	height:		100%;
	overflow-y:	auto;
	font-size:	85%;
	overflow: 	hidden;
	border-right:	1px solid black;
}

.potree_sidebar_brand{
	margin:			1px 20px;
	line-height:	2em;
	font-size:		100%;
	font-weight:	bold;
	position:		relative;
}

#potree_sidebar_container a{
	color: 			#8Aa1c4;
}

.potree_menu_toggle{
	position:		absolute;
	float:			left;
	margin:			8px 8px;
	background:		none;
	width:			2.5em;
	height:			2.5em;
	z-index:		100;
	cursor: 		pointer;
}

#potree_map_toggle{
	position:		absolute;
	float:			left;
	margin:			8px 8px;
	background:		none;
	width:			2.5em;
	height:			2.5em;
	z-index:		100;
	top:			calc(2.5em + 8px);
	cursor: 		pointer;
}

#potree_render_area{
	position: 	absolute;
	/*background: linear-gradient(-90deg, red, yellow);*/
	top: 		0px;
	bottom: 	0px;
	left: 		0px;
	right: 		0px;
	overflow: 	hidden;
	z-index: 	1;
	-webkit-transition: left .35s;
	transition: left .35s;
}

.potree-panel {
	border: 		1px solid black;
	border-radius: 	0.4em;
	padding: 		0px;
	background-color: var(--bg-light-color);
}

.potree-panel-heading{
	background-color: var(--bg-dark-color);
}

a:hover, a:visited, a:link, a:active{
	color: 				#ccccff;
	text-decoration: 	none;
}

.annotation{
	position:		absolute;
	padding:		10px;
	opacity:		0.5;
	transform:		translate(-50%, -30px);
}

.annotation-titlebar{
	color:			white;
	background-color:	black;
	border-radius:	1.5em;
	border:			1px solid rgba(255, 255, 255, 0.7);
	font-size:		1em;
	opacity:		1;
	margin:			auto;
	display:		table;
	padding:		1px 8px;
	cursor: 	pointer;
}

.annotation-expand{
	color:			white;
	font-size:		0.6em;
	opacity:		1;
}

.annotation-action-icon{
	width:			20px;
	height:			20px;
	display:		inline-block;
	vertical-align:	middle;
	line-height:	1.5em;
	text-align:		center;
	font-family:	Arial;
	font-weight:	bold;
	cursor: 		pointer;
}

.annotation-action-icon:hover{
	filter:			drop-shadow(0px 0px 1px white);
	width:			24px;
	height:			24px;
	cursor: 		pointer;
	
}

.annotation-item {
	color:			white;
	background-color: 	black;
	opacity:		0.5;
	border-radius:	1.5em;
	font-size:		1em;
	line-height:	1.5em;
	padding:		1px 8px 0px 8px;
	font-weight:	bold;
	display:		flex;
	cursor:			default;
}

.annotation-item:hover {
	opacity:		1.0;
	box-shadow:		0 0 5px #ffffff;
}

.annotation-main{
	display:		flex;
	flex-grow:		1;
}

.annotation-label{
	display:		inline-block;
	height:			100%;
	flex-grow:		1;
	user-select:	none;
	-moz-user-select: none;
	z-index:		100;
	vertical-align:	middle;
	line-height:	1.5em;
	font-family:	Arial;
	font-weight:	bold;
	cursor: 		pointer;
	white-space:	nowrap;
}

.annotation-description{
	position:		relative;
	color:			white;
	background-color:	black;
	padding:		10px;
	margin:			5px 0px 0px 0px;
	border-radius:	4px;
	display:		none;
	max-width:		500px;
	width:			500px;
}

.annotation-description-close{
	filter:			invert(100%);
	float:			right;
	opacity:		0.5;
	margin:			0px 0px 8px 8px;
}

	
.annotation-description-content{
	color:			white;
}

.annotation-icon{
	width:		20px;
	height:		20px;
	filter:		invert(100%);
	margin:		2px 2px;
	opacity:	0.5;
}


canvas { 
	width: 100%; 
	height: 100% 
}

body{ 
	margin: 	0; 
	padding: 	0;
	position:	absolute;
	width: 		100%;
	height: 	100%;
	overflow:	hidden;
}

.axis {
  font: 		10px sans-serif;
  color: 		var(--font-color);
}

.axis path{
	fill: 		rgba(255, 255, 255, 0.5);
	stroke: 		var(--font-color);
	shape-rendering: crispEdges;
	opacity: 		0.7;
}

.axis line {
	fill: 		rgba(255, 255, 255, 0.5);
	stroke: 		var(--font-color);
	shape-rendering: crispEdges;
	opacity: 		0.1;
}

.tick text{
	font-size: 12px;
}

.scene_header{
	display:flex;
	cursor: pointer;
	padding: 2px;
}

.scene_content{
	padding: 5px 0px 5px 0px;
	/*background-color: rgba(0, 0, 0, 0.4);*/
}

.measurement_content{
	padding: 5px 15px 5px 10px;
	/*background-color: rgba(0, 0, 0, 0.4);*/
}

.propertypanel_content{
	padding: 5px 15px 5px 10px;
	/*background-color: rgba(0, 0, 0, 0.4);*/
}

.measurement_value_table{
	width: 100%;
}

.coordinates_table_container table td {
	width: 33%;
	text-align: center;
}

#scene_object_properties{
	margin:		0px;
}




.pv-panel-heading{
	padding: 	4px !important;
	display: 	flex; 
	flex-direction: row
}

.pv-menu-list{
	list-style-type:	none;
	padding:			0;
	margin:				15px 0px;
}

.pv-menu-list > *{
	margin: 	4px 20px;
}

.ui-slider {
	margin-top: 5px;
	margin-bottom: 10px;
	background-color: 	var(--color-1) !important;
	background: 		none;
	border: 			1px solid black;
}

.ui-selectmenu-button.ui-button{
	width: 		100% !important;
}

.pv-menu-list > li > .ui-slider{
	background-color: 	var(--color-1) !important;
	background: 		none;
	border: 			1px solid black;
}

.pv-menu-list .ui-slider{
	background-color: 	var(--color-1) !important;
	background: 		none;
	border: 			1px solid black !important;
}

.ui-slider-handle{
	border: 			1px solid black !important;
}

.ui-widget{
	box-sizing:border-box
}

.panel-body > li > .ui-slider{
	background-color: var(--color-1) !important;
	background: none;
	border: 1px solid black;
}

.panel-body > div > li > .ui-slider{
	background-color: var(--color-1) !important;
	background: none;
	border: 1px solid black;
}

.pv-select-label{
	margin: 1px;
	font-size: 90%;
	font-weight: 100;
}

.button-icon:hover{
	/*background-color:	#09181C;*/
	filter:				drop-shadow(0px 0px 4px white);
}

.ui-widget-content{
	/*color: var(--font-color) !important;*/
}

.accordion > h3{
	background-color: var(--bg-color-2) !important;
	background: #f6f6f6 50% 50% repeat-x;
	border:		1px solid black;
	color:		var(--font-color-2);
	cursor:		pointer;
	margin:		2px 0 0 0;
	padding:	4px 10px 4px 30px;
	box-shadow:	0px 3px 3px #111;
	text-shadow:	1px 1px 0 #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
	font-size:	1em;
}

.accordion > h3:hover{
	filter: brightness(125%);
}

.accordion-content{
	padding: 0px 0px !important;
	border: none !important;
}

.icon-bar{
	height: 4px !important;
	border: 1px solid black;
	background-color: white;
	border-radius: 2px;
}

.canvas{
	-webkit-transition: top .35s, left .35s, bottom .35s, right .35s, width .35s;
	transition: top .35s, left .35s, bottom .35s, right .35s, width .35s;
}

#profile_window{
	background-color:	var(--bg-color);
}

#profile_titlebar{
	background-color:	var(--bg-color-2);
	color: var(--font-color-2);
	text-shadow: 1px 1px 0 #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
	font-size: 1em;
	font-weight: bold;
}

#profile_window_title{
	position: absolute;
	margin: 5px;
}

.profile-container-button{
	cursor: pointer;
}

.profile-button:hover{
	background-color: #0000CC;
}

.unselectable{
	-webkit-touch-callout: 	none;
	-webkit-user-select: 	none;
	-khtml-user-select: 	none;
	-moz-user-select: 		none;
	-ms-user-select: 		none;
	user-select: 			none;
}

.selectable{
	-webkit-touch-callout: 	text;
	-webkit-user-select: 	text;
	-khtml-user-select: 	text;
	-moz-user-select: 		text;
	-ms-user-select: 		text;
	user-select: 			text;
}



.divider {
	display: 		block;
	text-align: 	center;
	overflow: 		hidden;
	white-space: 	nowrap; 
	font-weight:	bold;
	font-size:		90%;
	letter-spacing:	1px;
	margin-left:	-20px;
	margin-right:	-20px;
	margin-top: 	1px;
	margin-bottom: 	1px;
	padding:		1px !important;
}

.divider > span {
	position: 	relative;
	display: 	inline-block;
}

.divider > span:before,
.divider > span:after {
	content: 	"";
	position: 	absolute;
	top: 		50%;
	width: 		9999px;
	height: 	1px;
	background: #b2b2b2;
}

.divider > span:before {
	right: 100%;
	margin-right: 5px;
}

.divider > span:after {
	left: 100%;
	margin-left: 5px;
}











.ol-dragbox {
  background-color: rgba(255,255,255,0.4);
  border-color: rgba(100,150,0,1);
  border: 1px solid red;
}

.text-icon{
	opacity:	0.5;
	height:		24px;
}

.text-icon:hover{
	opacity:	1.0;
}

.input-grid-cell{
	flex-grow: 1; margin: 0px 3px 0px 3px;
}

.input-grid-label{
	flex-grow: 1; 
	margin: 0px 3px 0px 3px; 
	text-align:center; 
	font-weight: bold;
}

.input-grid-cell > input{
	width: 100%
}

.invalid_value{
	color: #e05e5e;
}


































/** 
 * OVERRIDES
 */


.ui-spinner-input{
	color: black;
}

.jstree-themeicon-custom{
	background-size: 16px !important;
}

.jstree-default .jstree-clicked{
	/*background-color: #ffffff !important;*/
	background-color: #34494f !important;
}

.jstree-default .jstree-hovered{
	background-color: #34494f !in<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="description" content="">
	<meta name="author" content="">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
	<title>Potree Viewer</title>

	<link rel="stylesheet" type="text/css" href="../build/potree/potree.css">
	<link rel="stylesheet" type="text/css" href="../libs/jquery-ui/jquery-ui.min.css">
	<link rel="stylesheet" type="text/css" href="../libs/perfect-scrollbar/css/perfect-scrollbar.css">
	<link rel="stylesheet" type="text/css" href="../libs/openlayers3/ol.css">
	<link rel="stylesheet" type="text/css" href="../libs/spectrum/spectrum.css">
	<link rel="stylesheet" type="text/css" href="../libs/jstree/themes/mixed/style.css">
</head>

<body>
	<script src="../libs/jquery/jquery-3.1.1.min.js"></script>
	<script src="../libs/spectrum/spectrum.js"></script>
	<script src="../libs/perfect-scrollbar/js/perfect-scrollbar.jquery.js"></script>
	<script src="../libs/jquery-ui/jquery-ui.min.js"></script>
	<script src="../libs/three.js/build/three.min.js"></script>
	<script src="../libs/other/BinaryHeap.js"></script>
	<script src="../libs/tween/tween.min.js"></script>
	<script src="../libs/d3/d3.js"></script>
	<script src="../libs/proj4/proj4.js"></script>
	<script src="../libs/openlayers3/ol.js"></script>
	<script src="../libs/i18next/i18next.js"></script>
	<script src="../libs/jstree/jstree.js"></script>
	<script src="../build/potree/potree.js"></script>
	<script src="../libs/plasio/js/laslaz.js"></script>
	
	<!-- INCLUDE ADDITIONAL DEPENDENCIES HERE -->
	<!-- INCLUDE SETTINGS HERE -->
	
	<div class="potree_container" style="position: absolute; width: 100%; height: 100%; left: 0px; top: 0px; ">
		<div id="potree_render_area"></div>
		<div id="potree_sidebar_container"> </div>
	</div>

  
  <script>
    window.cesiumViewer = new Cesium.Viewer('cesiumContainer', {
        useDefaultRenderLoop: false,
        animation: false,
        baseLayerPicker : false,
        fullscreenButton: false, 
        geocoder: false,
        homeButton: false,
        infoBox: false,
        sceneModePicker: false,
        selectionIndicator: false,
        timeline: false,
        
        navigationHelpButton: false,
        
        imageryProvider : Cesium.createOpenStreetMapImageryProvider({url : 'https://a.tile.openstreetmap.org/'}),
    });

    let cp = new Cesium.Cartesian3(4303414.154026048, 552161.235598733, 4660771.704035539);
    cesiumViewer.camera.setView({
        destination : cp,
        orientation: {
            heading : 10, 
            pitch : -Cesium.Math.PI_OVER_TWO * 0.5, 
            roll : 0.0 
        }
    });

    window.potreeViewer = new Potree.Viewer(document.getElementById("potree_render_area"), {
        useDefaultRenderLoop: false
    });
    potreeViewer.setEDLEnabled(true);
	potreeViewer.setFOV(60);
	potreeViewer.setPointBudget(2000*1000);
	potreeViewer.setMinNodeSize(0);
    potreeViewer.loadSettingsFromURL();
    potreeViewer.setBackground(null);

    potreeViewer.loadGUI(() => {
		potreeViewer.setLanguage('en');
		$("#menu_appearance").next().show();
		//viewer.toggleSidebar();
    });
    
    //Potree.loadPointCloud("http://5.9.65.151/mschuetz/potree/resources/pointclouds/archpro/heidentor/cloud.js", "Heidentor", function(e){
    Potree.loadPointCloud("../pointclouds/vol_total/cloud.js", "sigeom.sa", e => {
		potreeViewer.scene.addPointCloud(e.pointcloud);
		e.pointcloud.position.z = 0;
		let material = e.pointcloud.material;
		material.pointSizeType = Potree.PointSizeType.ADAPTIVE;
		
        potreeViewer.scene.view.position.set(590096.63, 231923.89, 509.60);
		potreeViewer.scene.view.lookAt(new THREE.Vector3(589807.61, 231393.30, 25.07));

        Potree.measureTimings = true;
        

        let pointcloudProjection = e.pointcloud.projection;
        let mapProjection = proj4.defs("WGS84");

		window.toMap = proj4(pointcloudProjection, mapProjection);
        window.toScene = proj4(mapProjection, pointcloudProjection);
        
        {
            let bb = potreeViewer.getBoundingBox();

            let minWGS84 = proj4(pointcloudProjection, mapProjection, bb.min.toArray());
            let maxWGS84 = proj4(pointcloudProjection, mapProjection, bb.max.toArray());

            let entity = {
                name : 'Sorvilier',
                polygon : {
                    hierarchy : Cesium.Cartesian3.fromDegreesArray([
                        minWGS84[0], minWGS84[1],
                        maxWGS84[0], minWGS84[1],
                        maxWGS84[0], maxWGS84[1],
                        minWGS84[0], maxWGS84[1],
                        ]),
                    material : Cesium.Color.RED.withAlpha(0.5)
                }
            };

            let sorvilier = cesiumViewer.entities.add(entity);
        }
        
        
	});

    function loop(timestamp){
        requestAnimationFrame(loop);

        potreeViewer.update(potreeViewer.clock.getDelta(), timestamp);

        potreeViewer.render();

        if(window.toMap !== undefined){

            {
                let camera = potreeViewer.scene.getActiveCamera();

                let pPos    = new THREE.Vector3(0, 0, 0).applyMatrix4(camera.matrixWorld);
                let pRight  = new THREE.Vector3(600, 0, 0).applyMatrix4(camera.matrixWorld);
                let pUp     = new THREE.Vector3(0, 600, 0).applyMatrix4(camera.matrixWorld);
                let pTarget = potreeViewer.scene.view.getPivot();

                let toCes = (pos) => {
                    let xy = [pos.x, pos.y];
                    let height = pos.z;
                    let deg = toMap.forward(xy);
                    let cPos = Cesium.Cartesian3.fromDegrees(...deg, height);

                    return cPos;
                };

                let cPos = toCes(pPos);
                let cUpTarget = toCes(pUp);
                let cTarget = toCes(pTarget);

                let cDir = Cesium.Cartesian3.subtract(cTarget, cPos, new Cesium.Cartesian3());
                let cUp = Cesium.Cartesian3.subtract(cUpTarget, cPos, new Cesium.Cartesian3());

                cDir = Cesium.Cartesian3.normalize(cDir, new Cesium.Cartesian3());
                cUp = Cesium.Cartesian3.normalize(cUp, new Cesium.Cartesian3());

                cesiumViewer.camera.setView({
                    destination : cPos,
                    orientation : {
                        direction : cDir,
                        up : cUp
                    }
                });
                
            }

            let aspect = potreeViewer.scene.getActiveCamera().aspect;
            if(aspect < 1){
                let fovy = Math.PI * (potreeViewer.scene.getActiveCamera().fov / 180);
                cesiumViewer.camera.frustum.fov = fovy;
            }else{
                let fovy = Math.PI * (potreeViewer.scene.getActiveCamera().fov / 180);
                let fovx = Math.atan(Math.tan(0.5 * fovy) * aspect) * 2
                cesiumViewer.camera.frustum.fov = fovx;
            }
            
        }    

        cesiumViewer.render();
    }

    requestAnimationFrame(loop);


  </script>
</body>
</html>
mportant;
}

.jstree-anchor{
	width: 100% !important;
}

.ui-state-default{
	background: #a6a9aa !important;
	border: 1px solid black;
	color: black;
}

.ui-state-active{
	background: #c6c9ca !important;
	color: black !important;
}

.cesium-viewer .cesium-viewer-cesiumWidgetContainer{
	position: absolute;
	height: 100%;
	width: 100%;
}